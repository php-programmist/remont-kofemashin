# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'ru'
  mailer_user: 'php.programmist.ru@gmail.com'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.brand:
        class: App\Admin\BrandAdmin
        arguments: [~, App\Entity\Brand, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Контент', label: 'Бренды' }
    admin.model:
        class: App\Admin\ModelAdmin
        arguments: [~, App\Entity\Model, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Контент', label: 'Модели' }
    admin.service:
        class: App\Admin\ServiceAdmin
        arguments: [~, App\Entity\Service, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: 'Контент', label: 'Услуги' }
